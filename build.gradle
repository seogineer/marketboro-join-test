buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.seogineer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //shedlock
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'net.javacrumbs.shedlock:shedlock-spring:4.29.0'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:4.29.0'
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    //cache
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //DB
    implementation "mysql:mysql-connector-java"
    runtimeOnly 'com.h2database:h2'
    //flyway
    implementation 'org.flywaydb:flyway-core:5.2.4'
    //validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    //test
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'com.google.guava', name: 'guava', version: 'r05'
    //swagger
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
